{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","className","htmlFor","classnames","is-invalid","defaultProps","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_callee","_this$state","newContact","regenerator_default","wrap","_context","prev","next","preventDefault","abrupt","post","sent","history","push","stop","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","onClick","style","cursor","float","color","react_router_dom","to","marginRight","Contacts","Fragment","Contact_Contact","key","Header","branding","href","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAGxC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAIV,QACE,OAAOP,IAGQa,6MACnBb,MAAQ,CACNK,SAAU,GACVS,SAAU,SAAAb,GACRc,EAAKC,SAAS,SAAAhB,GAAK,OAAID,EAAQC,EAAOC,wNAKtBgB,IAAMC,IAAI,qDAAtBC,SAENC,KAAKJ,SAAS,CAAEX,SAAUc,EAAIE,0IAG9B,OACEC,EAAAC,EAAAC,cAAC5B,EAAQiB,SAAT,CAAkBY,MAAOL,KAAKpB,OAC3BoB,KAAKM,MAAMC,iBAhBkBC,aAqBzBC,EAAWjC,EAAQiC,kCClD1BC,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,KACAR,EAKIM,EALJN,MACAS,EAIIH,EAJJG,YACAhC,EAGI6B,EAHJ7B,KACAiC,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACEd,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACbf,EAAAC,EAAAC,cAAA,SAAOc,QAASL,GAAOD,GACvBV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEtB,KAAMA,EACN+B,KAAMA,EACNI,UAAWE,IAAW,+BAAgC,CACpDC,aAAcJ,IAEhBF,YAAaA,EACbT,MAAOA,EACPU,SAAUA,IAEXC,GAASd,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oBAAoBD,KAcnDN,EAAeW,aAAe,CAC5BvC,KAAM,QAEO4B,QC+DAY,6MApGb1C,MAAQ,CACNiC,KAAM,GACNU,MAAO,GACPC,MAAO,GACPC,OAAQ,MAEVV,SAAW,SAAAW,GAAC,OAAI/B,EAAKC,SAALb,OAAA4C,EAAA,EAAA5C,CAAA,GAAiB2C,EAAEE,OAAOf,KAAOa,EAAEE,OAAOvB,WAC1DwB,+CAAW,SAAAC,EAAOpC,EAAUgC,GAAjB,IAAAK,EAAAlB,EAAAU,EAAAC,EAAAQ,EAAAjC,EAAA,OAAAkC,EAAA9B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTX,EAAEY,iBADOP,EAEsBpC,EAAKf,MAA5BiC,EAFCkB,EAEDlB,KAAMU,EAFLQ,EAEKR,MAAOC,EAFZO,EAEYP,MAER,KAATX,EAJK,CAAAsB,EAAAE,KAAA,eAKP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAEZ,KAAM,sBALzBsB,EAAAI,OAAA,oBAQK,KAAVhB,EARK,CAAAY,EAAAE,KAAA,eASP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAEF,MAAO,uBAT1BY,EAAAI,OAAA,oBAYK,KAAVf,EAZK,CAAAW,EAAAE,KAAA,gBAaP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAED,MAAO,uBAb1BW,EAAAI,OAAA,yBAgBHP,EAAa,CAEjBnB,OACAU,QACAC,SApBOW,EAAAE,KAAA,GAuBSxC,IAAM2C,KACtB,6CACAR,GAzBO,QAuBHjC,EAvBGoC,EAAAM,KA2BT/C,EAAS,CAAEZ,KAAM,cAAeO,QAASU,EAAIE,OAG7CN,EAAKC,SAAS,CACZiB,KAAM,GACNU,MAAO,GACPC,MAAO,GACPC,OAAQ,KAEV9B,EAAKW,MAAMoC,QAAQC,KAAK,KApCf,yBAAAR,EAAAS,SAAAd,sIAuCF,IAAAe,EAAA7C,KAAA8C,EACgC9C,KAAKpB,MAApCiC,EADDiC,EACCjC,KAAMU,EADPuB,EACOvB,MAAOC,EADdsB,EACctB,MAAOC,EADrBqB,EACqBrB,OAC5B,OACEvB,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eAAf,eACAf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,QAAMyB,SAAUgB,EAAKhB,SAASkB,KAAKF,EAAMnD,IACvCQ,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZT,MAAOQ,EACPE,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOZ,OAGhBX,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,QACNC,KAAK,QACL/B,KAAK,QACLgC,YAAY,iBACZT,MAAOkB,EACPR,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOF,QAGhBrB,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZT,MAAOmB,EACPT,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOD,QAGhBtB,EAAAC,EAAAC,cAAA,SACEtB,KAAK,SACLuB,MAAM,cACNY,UAAU,uCAzFLT,aCiHVyC,6MAhHbrE,MAAQ,CACNiC,KAAM,GACNU,MAAO,GACPC,MAAO,GACPC,OAAQ,MAcVV,SAAW,SAAAW,GAAC,OAAI/B,EAAKC,SAALb,OAAA4C,EAAA,EAAA5C,CAAA,GAAiB2C,EAAEE,OAAOf,KAAOa,EAAEE,OAAOvB,WAC1DwB,+CAAW,SAAAC,EAAOpC,EAAUgC,GAAjB,IAAAK,EAAAlB,EAAAU,EAAAC,EAAA0B,EAAA9D,EAAAW,EAAA,OAAAkC,EAAA9B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTX,EAAEY,iBADOP,EAEsBpC,EAAKf,MAA5BiC,EAFCkB,EAEDlB,KAAMU,EAFLQ,EAEKR,MAAOC,EAFZO,EAEYP,MAER,KAATX,EAJK,CAAAsB,EAAAE,KAAA,eAKP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAEZ,KAAM,sBALzBsB,EAAAI,OAAA,oBAQK,KAAVhB,EARK,CAAAY,EAAAE,KAAA,eASP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAEF,MAAO,uBAT1BY,EAAAI,OAAA,oBAYK,KAAVf,EAZK,CAAAW,EAAAE,KAAA,gBAaP1C,EAAKC,SAAS,CAAE6B,OAAQ,CAAED,MAAO,uBAb1BW,EAAAI,OAAA,yBAiBHW,EAAa,CACjBrC,OACAU,QACAC,SAGMpC,EAAOO,EAAKW,MAAM6C,MAAMC,OAAxBhE,GAvBC+C,EAAAE,KAAA,GAwBSxC,IAAMwD,IAAN,8CAAA/D,OAC8BF,GAC9C8D,GA1BO,QAwBHnD,EAxBGoC,EAAAM,KA4BT/C,EAAS,CAAEZ,KAAM,iBAAkBO,QAASU,EAAIE,OAEhDN,EAAKC,SAAS,CACZiB,KAAM,GACNU,MAAO,GACPC,MAAO,GACPC,OAAQ,KAEV9B,EAAKW,MAAMoC,QAAQC,KAAK,KApCf,yBAAAR,EAAAS,SAAAd,0QAZD1C,EAAOY,KAAKM,MAAM6C,MAAMC,OAAxBhE,YACUS,IAAMC,IAAN,8CAAAR,OAC8BF,WAD1CW,SAGAZ,EAAUY,EAAIE,KACpBD,KAAKJ,SAAS,CACZiB,KAAM1B,EAAQ0B,KACdU,MAAOpC,EAAQoC,MACfC,MAAOrC,EAAQqC,2IA2CV,IAAAqB,EAAA7C,KAAA8C,EACgC9C,KAAKpB,MAApCiC,EADDiC,EACCjC,KAAMU,EADPuB,EACOvB,MAAOC,EADdsB,EACctB,MAAOC,EADrBqB,EACqBrB,OAC5B,OACEvB,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eAAf,gBACAf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,QAAMyB,SAAUgB,EAAKhB,SAASkB,KAAKF,EAAMnD,IACvCQ,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,OACNC,KAAK,OACLC,YAAY,gBACZT,MAAOQ,EACPE,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOZ,OAGhBX,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,QACNC,KAAK,QACL/B,KAAK,QACLgC,YAAY,iBACZT,MAAOkB,EACPR,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOF,QAGhBrB,EAAAC,EAAAC,cAAC4C,EAAD,CACEpC,MAAM,QACNC,KAAK,QACLC,YAAY,iBACZT,MAAOmB,EACPT,SAAU8B,EAAK9B,SACfC,MAAOS,EAAOD,QAGhBtB,EAAAC,EAAAC,cAAA,SACEtB,KAAK,SACLuB,MAAM,iBACNY,UAAU,uCArGJT,aCAL8C,6MACnB1E,MAAQ,CACN2E,iBAAiB,KAEnBC,oDAAgB,SAAA1B,EAAO1C,EAAIM,GAAX,OAAAuC,EAAA9B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRxC,IAAM4D,OAAN,8CAAAnE,OAA2DF,IADnD,OAGdM,EAAS,CACPZ,KAAM,iBACNO,QAASD,IALG,wBAAA+C,EAAAS,SAAAd,oIAQTxB,GAAO,IAAAuC,EAAA7C,KAAA0D,EACuB1D,KAAKM,MAAMnB,QAAtCC,EADIsE,EACJtE,GAAIyB,EADA6C,EACA7C,KAAMU,EADNmC,EACMnC,MAAOC,EADbkC,EACalC,MACjB+B,EAAoBvD,KAAKpB,MAAzB2E,gBAER,OACErD,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,uBACbf,EAAAC,EAAAC,cAAA,UACGS,EACDX,EAAAC,EAAAC,cAAA,KACEa,UAAU,mBACV0C,QAAS,kBACPd,EAAKjD,SAAS,CACZ2D,iBAAkBV,EAAKjE,MAAM2E,mBAGjCK,MAAO,CAAEC,OAAQ,aAGnB3D,EAAAC,EAAAC,cAAA,KACEa,UAAU,eACV2C,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASd,EAAKW,cAAcT,KAAKF,EAAMzD,EAAIM,KAE7CQ,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAE,gBAAA3E,OAAkBF,IACxBc,EAAAC,EAAAC,cAAA,KACEa,UAAU,oBACV2C,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPG,YAAa,OACbJ,MAAO,aAKdP,EACCrD,EAAAC,EAAAC,cAAA,MAAIa,UAAU,cACZf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,mBAAd,UAAwCM,EAAxC,KACArB,EAAAC,EAAAC,cAAA,MAAIa,UAAU,mBAAd,UAAwCO,IAExC,eAxDmBhB,aCmBtB2D,mLAnBX,OACEjE,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACApB,EAAaoB,EAAbpB,SACR,OACEiB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,SAAP,KACElE,EAAAC,EAAAC,cAAA,MAAIa,UAAU,kBACZf,EAAAC,EAAAC,cAAA,QAAMa,UAAU,eAAhB,YADF,QAGChC,EAASO,IAAI,SAAAL,GAAO,OACnBe,EAAAC,EAAAC,cAACiE,EAAD,CAASC,IAAKnF,EAAQC,GAAID,QAASA,gBAZ5BqB,aCAjB+D,EAAS,SAAAjE,GAAS,IACdkE,EAAalE,EAAbkE,SACR,OACEtE,EAAAC,EAAAC,cAAA,OAAKa,UAAU,2DACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAAA,KAAGqE,KAAK,IAAIxD,UAAU,gBACnBuD,GAEHtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIa,UAAU,sBACZf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,YACZf,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAG,IAAIhD,UAAU,YACrBf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,gBADf,UAIFf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,YACZf,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAG,eAAehD,UAAU,YAChCf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,gBADf,QAKFf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,YACZf,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMC,GAAG,SAAShD,UAAU,YAC1Bf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,oBADf,eAYdsD,EAAOlD,aAAe,CACpBmD,SAAU,sBAKGD,QC7BAG,EAbD,SAAApE,GAGZ,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIa,UAAU,aAAd,yBAEAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,QAAb,iCACAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,kBAAb,mBCRS,SAAS0D,IACtB,OACEzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIa,UAAU,aACZf,EAAAC,EAAAC,cAAA,QAAMa,UAAU,eAAhB,QADF,kBAGAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,QAAb,uCCsCS2D,6MA3CbhG,MAAQ,CACNiG,MAAO,GACPC,KAAM,uFAEY,IAAAjC,EAAA7C,KAClB+E,QAAQC,IAAI,uBACZC,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAjF,GAAI,OACR4C,EAAKjD,SAAS,CACZiF,MAAO5E,EAAK4E,MACZC,KAAM7E,EAAK6E,0CAqBV,IAAA/C,EACiB/B,KAAKpB,MAArBiG,EADD9C,EACC8C,MAAOC,EADR/C,EACQ+C,KACf,OACE5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKyE,GACL3E,EAAAC,EAAAC,cAAA,SAAI0E,WAtCOtE,aCmCJ6E,0LAtBX,OACEnF,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACE9D,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAACmF,EAAD,CAAQf,SAAS,oBACjBtE,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACbf,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjCjE,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWjB,IACvCxE,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWf,IACtC1E,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWrE,IAC5CpB,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW1C,IACjD/C,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOG,UAAWhB,gBAdhBnE,cCDEoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2DCZN6C,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.9d75a564.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <br />\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n// import uuid from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-info\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n// import uuid from \"uuid\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-info\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id\r\n    });\r\n  };\r\n  render(props) {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                      float: \"right\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email} </li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager007\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = props => {\r\n  // Дараах кодоор браузераас параметр авна\r\n  // { props.match.params.id}\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span>Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"Component did mount\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n  //   componentWillMount() {\r\n  //     console.log(\"Component will mount\");\r\n  //   }\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"Component did update\");\r\n  //   }\r\n  //   componentWillUpdate() {\r\n  //     console.log(\"Component will update\");\r\n  //   }\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"Component will receive props\");\r\n  //   }\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return {\r\n  //       test: \"something\"\r\n  //     };\r\n  //   }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Provider from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/test/\" component={Test} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}